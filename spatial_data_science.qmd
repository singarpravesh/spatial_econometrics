---
title: "Spatial Data Science"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

## Datum

-   The concept of absolute space and time indicates that there exists a fixed reference frame against which the positions and motions of objects can be measured.
-   The idea of a fixed datum is crutial to this concept of absolute space and time.
-   This provides a reference point from which the absolute positions and times of objects can be measured, in a manner analogous to how zero serves the natural origin for amounts (positive and negative).
-   For space, a datum involves more than one dimension.
-   The combination of datum and a measurement unit (scale) is a *reference system*.

## Simple feature geometries

-   They are a way to describe the geometries of *features*.
    -   Features have a geometry, time properties, and attributes (that could include labels that describe the feature and/or have values that quantitatively measure it).
-   The seven most common simple features geometries are:
    -   `POINT` - a single point geometry
    -   `MULTIPOINT` - set of points
    -   `LINESTRING` - two or more points connected by lines.
    -   `MULTILINESTRING` - set of linestrings
    -   `POLYGON` - exterior ring with zero or more inner rings, denoting holes
    -   `MULTIPOLYGON` - set of polygons
    -   `GEOMETRYCOLLECTION` - set of the geometries above.

![](https://r-spatial.org/book/03-Geometries_files/figure-html/fig-sfgeometries-1.png)

## Reading data

```{r}
library(sf)

# Let's read a file in the `sf` package
(st_read(system.file("gpkg/nc.gpkg", package = "sf")) -> nc)
```

-   Here `.gpkg` is a *geopackage* file.
-   This file has only one *layer*.

```{r}
st_layers(system.file("gpkg/nc.gpkg", package = "sf"))
```

## Subsetting

```{r}
plot(st_geometry(nc))
plot(st_geometry(nc[1:5, ]))
plot(st_geometry(nc[1:7, ]))
```

## Binary predicates

```{r}
st_intersects(nc[1:5, ], nc[1:7, ])
plot(st_geometry(nc[1:7,]))
plot(st_geometry(nc[1:5, ]), add= TRUE, border = "red")

```

## The `stars` package

-   Used for analysing raster and vector data cubes.

```{r}
tif <- system.file("tif/L7_ETMs.tif", package = "stars")
library(stars)
(r <- read_stars(tif))
```

-   Interpreting the output
-   There are 3 dimensions and 1 attribute
-   The 3 dimensions are
    -   **x**, **y**, and **band**
    -   **x** has 349 cells, **y** has 352 cells, and there are 6 **band**s
    -   **band** refers to a dimension that represent different layers of data often associated with colours or wavelengths in raster dataset.
-   The attribute is named *L7_ETMS.tif* and the min, max, mean, values are calculated
- The dimension table contains the following fields for each dimension:
  - `from`: starting index
  - `to`: ending index
  - `offset`: dimension value at the start (edge) of the first pixel
  - `delta`: cell size; negative delta values indicate that pixel index increases with decreasing dimension values
  - `refsys`: reference system
  - `point`: logical, indicates whether cell values have point support or cell support
  - `x/y`: indicates whether a dimension is associated with a spatial raster x- or y-axis

-   Point support and Cell support
    -    **Point Support**:

        -   Point support data represents spatial information at specific point locations, without any associated area or extent.

        -   Examples include weather stations, survey points, or GPS coordinates.

        -   Point support data is typically modeled as a vector data type, where each point has a unique coordinate pair (x,y) or (longitude, latitude).

        -   Analysis and interpolation methods for point support data aim to estimate values at unsampled locations based on the surrounding point values.

    -    **Cell Support**:

        -   Cell support data represents spatial information as a grid or raster, where the space is divided into a regular array of cells or pixels.

        -   Each cell has a value that represents the average, sum, or representative value within that cell's extent.

        -   Examples include satellite imagery, digital elevation models (DEMs), and land cover maps.

        -   Cell support data is typically modeled as a raster data type, where each cell has a unique row and column index, as well as a value.

        -   Analysis and processing methods for cell support data often involve operations on the grid, such as filtering, resampling, or zonal statistics.

        The main differences are:

        -   Point support data represents specific locations, while cell support data represents a tessellated space.

        -   Point support data is modeled as vector data, while cell support data is modeled as raster data.

        -   Analysis of point support data focuses on interpolation, while analysis of cell support data focuses on grid-based operations.

## Subsetting `stars` data cubes
- In the `r` data cube we know that there are 3 dimensions and 1 attribute. 
- The `offset` indicates the dimension value at  the start.
- So we can filter the dataset using these values.
- Here we use the `cubelyr` package to filter the data cube.
- The `cubelyr` package in R provides a data cube backend for the dplyr package, which means it offers a specialized data structure and functionality to work with multidimensional data in a way that is compatible with dplyr's data manipulation workflows
```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(cubelyr)
r %>%  
  filter(x < 300000, x  < 10000000)
```

- Particular cube slices can also be obtained by using `slice()`
```{r}
r %>% slice(band, 2)

r %>%  slice(band, 1:3)

r %>%  slice(band, c(1,4,6))
```

## Moran's I statistic

```{r}
# Load necessary packages
library(terra)
library(spdep)
library(sf)
library(sp)
library(tidyverse)

# Load example spatial data
data("baltimore", package = "spData") 


plot(baltimore$PRICE)
```


